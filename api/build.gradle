plugins {
    id "com.google.cloud.tools.jib" version "3.3.2"
}

dependencies {
    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'

    //object storage
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.470'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    //thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.20'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-55:3.5.1'
    implementation 'javax.validation:validation-api'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
}

    // Querydsl 설정부
    def generated = 'src/main/generated'

    // querydsl QClass 파일 생성 위치를 지정
    tasks.withType(JavaCompile) {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
    }

    // java source set 에 querydsl QClass 위치 추가
    sourceSets {
        main.java.srcDirs += [ generated ]
    }

    // gradle clean 시에 QClass 디렉토리 삭제
    clean {
        delete file(generated)
    }

jar {
    enabled = false
}

tasks.named('jibDockerBuild') {
    dependsOn test
}

jib {
    from {
        image = 'openjdk:11-jre-slim-bullseye'
    }
    to {
        image = '520511553477.dkr.ecr.ap-northeast-2.amazonaws.com/pawpaw-back-dev'
    }
    container {
        mainClass = "kr.co.pawpaw.api.ApiApplication"
        jvmFlags = ['-Duser.timezone=Asia/Seoul', '-Dspring.profiles.active=dev', '-XX:+UseContainerSupport']
        volumes = ["/tmp"]
    }
}