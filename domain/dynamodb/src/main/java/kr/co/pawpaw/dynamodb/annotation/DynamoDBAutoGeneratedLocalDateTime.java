package kr.co.pawpaw.dynamodb.annotation;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerated;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerator;
import lombok.SneakyThrows;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@DynamoDBAutoGenerated(generator = DynamoDBAutoGeneratedLocalDateTime.Generator.class)
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.FIELD, ElementType.METHOD})
public @interface DynamoDBAutoGeneratedLocalDateTime {
    DynamoDBAutoGenerateStrategy strategy() default DynamoDBAutoGenerateStrategy.ALWAYS;

    final class Generator<T> extends DynamoDBAutoGenerator.AbstractGenerator<Object> {
        private final Class<T> targetType;

        public Generator(Class<T> targetType, DynamoDBAutoGeneratedLocalDateTime annotation) {
            super(annotation.strategy());
            this.targetType = targetType;
        }

        @SneakyThrows
        @Override
        public Object generate(Object currentValue) {
            return targetType.getMethod("now").invoke(null);
        }
    }
}
